{"version":3,"sources":["images/sound.gif","Components/RemoteStream.js","RTMClient.js","App2.js","index.js"],"names":["RemoteStream","props","id","stream","onAVChange","isTute","speaking","tuteControls","audioState","videoState","className","src","speakingIcon","alt","fontSize","onClick","video","audio","RTMClient","appId","channels","loggedIn","client","AgoraRTM","createInstance","uid","this","subscribeClientEvents","a","token","login","state","channelName","joined","channel","createChannel","subscribeChannelEvents","join","text","sendMessage","peerId","console","log","sendMessageToPeer","toString","data","isChannelJoined","addOrUpdateChannelAttributes","getChannelAttributes","leave","logout","forEach","eventName","on","args","emit","EventEmitter","videoProfiles","label","detail","value","App2","initRTM","init","loginToRTM","alert","then","updateLoginState","setState","rtmLoggedIn","getAVStates","joinSessionChannel","catch","error","attr","av","JSON","parse","checkForInitialMute","ctrl","tuteAVControls","muteUser","joinChannel","res","updateChannelState","joinRTCChannel","rtmChannelJoined","onChannelMessage","onMemberJoined","onMemberLeft","onAttributesUpdated","onConnectionStateChanged","onMessageFromPeer","attributes","memberId","message","type","localAudio","audioTrack","setEnabled","localVideo","videoTrack","initLocalStream","AgoraRTC","createCameraVideoTrack","encoderConfig","selectedProfile","createMicrophoneAudioTrack","play","localVideoView","current","onDeviceChange","onMicrophoneChanged","onCameraChanged","info","device","getDevices","devices","audioDevices","filter","kind","length","deviceId","newAudioDevice","audioPublished","RTCClient","unpublish","publishTrack","track","publish","trackMediaType","videoPublished","unpublishTrack","initClient","createClient","mode","codec","subscribeEvents","userPublished","userUnPublished","userLeft","userJoined","enableAudioVolumeIndicator","volumeIndicator","networkQuality","stats","downlinkNetworkQuality","uplinkNetworkQuality","newNetworkQuality","setVideoProfile","profile","setEncoderConfiguration","volumes","volume","index","level","updateSpeaker","suid","speakers","push","removeSpeaker","setTimeout","indexOf","splice","user","reason","remoteStreams","mediaType","subscribe","setRemoteVideoStreamType","setStreamFallbackOption","unsubscribe","enableDualStream","err","toggleTrack","stringify","sendPeerMessage","result","hasPeerReceived","leaveChannel","toggleProfile","event","target","localStreamInitiated","React","createRef","onChange","e","placeholder","ref","title","style","marginRight","Object","keys","marginLeft","map","item","Component","ReactDOM","render","StrictMode","display","document","getElementById"],"mappings":"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","file":"static/js/main.9fdd97e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sound.01cc9b1f.gif\";","import React from 'react';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport speakingIcon from './../images/sound.gif';\n\nconst RemoteStream = (props) => {\n  const { id, stream, onAVChange, isTute = false, speaking = false, tuteControls = {} } = props;\n  const { audioState, videoState } = stream;\n\n  return (\n    <div className=\"remoteStreamItem\">\n      <div className={speaking ? \"remoteStream speaking\" : \"remoteStream\"} id={id}>\n        <div className=\"speakerIcon\"><img className=\"sicon\" src={speakingIcon} alt=\"\" /></div>\n        <div className=\"rmtControls\">\n          <div className=\"controlIcon\" >{videoState ? <VideocamIcon fontSize=\"small\" /> : <VideocamOffIcon fontSize=\"small\" />}</div>\n          <div className=\"controlIcon\">{id}</div>\n          <div className=\"controlIcon\">{audioState ? <MicIcon fontSize=\"small\" /> : <MicOffIcon fontSize=\"small\" />}</div>\n        </div>\n      </div>\n\n      {isTute && <div className=\"tuteControls\">\n        <button className=\"controlIcon\" onClick={() => onAVChange(id, 'video', tuteControls.video)} >{tuteControls.video ? \"Mute Video\" : \"Unmute Video\"}</button>\n        <button className=\"controlIcon\" onClick={() => onAVChange(id, 'audio', tuteControls.audio)}>{tuteControls.audio ? \"Mute Audio\" : \"Unmute Audio\"}</button>\n      </div>}\n    </div>\n  );\n};\n\nexport default RemoteStream;","import AgoraRTM from \"agora-rtm-sdk\";\nimport EventEmitter from \"events\";\n\nexport default class RTMClient extends EventEmitter {\n  constructor(appId) {\n    super();\n    this.channels = {}\n    this.loggedIn = false;\n    this.client = AgoraRTM.createInstance(appId);\n    this.uid = null;\n  }\n\n  init() {\n    this.subscribeClientEvents();\n  }\n\n  async login(uid, token = null) {\n    this.uid = uid\n    return this.client.login({ uid, token })\n  }\n\n  updateLoginState(state) {\n    this.loggedIn = state\n  }\n\n  updateChannelState(channelName, state) {\n    if (this.channels[channelName]) {\n      this.channels[channelName].joined = state;\n    }\n  }\n\n  async joinChannel(channelName) {\n    let channel = this.client.createChannel(channelName);\n    this.channels[channelName] = {\n      channel,\n      joined: false\n    }\n    this.subscribeChannelEvents(channelName);\n    return channel.join();\n  }\n\n  isChannelJoined(channelName) {\n    if (!this.channels[channelName] || !this.channels[channelName].joined) {\n      return false;\n    }\n    return true;\n  }\n\n  async sendChannelMessage(text, channelName) {\n    if (!this.channels[channelName] || !this.channels[channelName].joined) return\n    return this.channels[channelName].channel.sendMessage({ text })\n  }\n\n  async sendPeerMessage(text, peerId) {\n    console.log('sendPeerMessage', text, peerId)\n    return this.client.sendMessageToPeer({ text }, peerId.toString())\n  }\n\n  async addOrUpdateChannelAttributes(channelName, data) {\n    if (this.isChannelJoined(channelName)) {\n      return this.client.addOrUpdateChannelAttributes(channelName, data);\n    }\n    return;\n  }\n\n  async getChannelAttributes(channelName) {\n    if (this.loggedIn) {\n      return this.client.getChannelAttributes(channelName);\n    }\n    return;\n  }\n\n  async leaveChannel(channelName) {\n    console.log('leaveChannel', channelName)\n    if (this.isChannelJoined(channelName)) {\n      return this.channels[channelName].channel.leave();\n    }\n    return;\n  }\n\n  async logout() {\n    return this.client.logout();\n  }\n\n  subscribeClientEvents() {\n    const clientEvents = [\n      'ConnectionStateChanged',\n      'MessageFromPeer'\n    ];\n    clientEvents.forEach((eventName) => {\n      this.client.on(eventName, (...args) => {\n        this.emit(eventName, ...args)\n      })\n    })\n  }\n\n  subscribeChannelEvents(channelName) {\n    const channelEvents = [\n      'ChannelMessage',\n      'MemberJoined',\n      'MemberLeft',\n      'AttributesUpdated'\n    ]\n    channelEvents.forEach((eventName) => {\n      this.channels[channelName].channel.on(eventName, (...args) => {\n        console.log('emit ', eventName, args)\n        this.emit(eventName, { channelName, args: args })\n      })\n    })\n  }\n}","import React from 'react';\nimport AgoraRTC from 'agora-rtc-sdk-ng';\nimport './App.css';\nimport RemoteStream from './Components/RemoteStream';\n\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport RTMClient from './RTMClient';\n\n\nvar videoProfiles = [\n  { label: \"120p_1\", detail: \"120p_1, 160×120, 15fps, 65Kbps\", value: \"120p_1\" },\n  { label: \"180p_3\", detail: \"180p_1, 320×180, 15fps, 140Kbps\", value: \"180p_3\" },\n  { label: \"240p_1\", detail: \"240p_1, 320×240, 15fps, 200Kbps\", value: \"240p_1\" }\n]\n\n\nclass App2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      localStreamInitiated: false,\n      remoteStreams: {},\n      localVideo: true,\n      localAudio: true,\n      videoPublished: false,\n      audioPublished: false,\n      rtmLoggedIn: false,\n      rtmChannelJoined: false,\n      uid: \"\",\n      tuteAVControls: {\n        audio: true,\n        video: true\n      },\n      isTute: true,\n      selectedProfile: '240p_1',\n      networkQuality: 1,\n      tuteControls: {\n      },\n      speakers: [],\n\n    }\n\n    this.videoTrack = null\n    this.audioTrack = null;\n\n    this.RTCClient = null;\n    this.RTMClient = null;\n\n    this.channel = \"demo_channel_name\";\n    this.localVideoView = React.createRef();\n    this.appId = \"b8f5d7b5efcc4ba8992ac09d46a591b1\";\n  }\n\n  componentDidMount() {\n    this.initRTM();\n    this.initLocalStream();\n    this.onDeviceChange();\n    this.initClient();\n  }\n\n  initRTM = () => {\n    this.RTMClient = new RTMClient(this.appId);\n    this.RTMClient.init();\n    this.subscribeClientEvents();\n  }\n\n  loginToRTM = async () => {\n    if (this.state.uid === \"\") {\n      alert(\"please enter username\");\n      return;\n    }\n    await this.RTMClient.login(this.state.uid).then(() => {\n      console.log(\" =>> RTM Loggin successfull!\");\n      this.RTMClient.updateLoginState(true);\n      this.setState({ rtmLoggedIn: true, isTute: this.state.uid === 'admin' });\n      this.getAVStates();\n      this.joinSessionChannel();\n    }).catch(error => {\n      console.log(\" =>> failed to login RTM\", error)\n    })\n  }\n\n  getAVStates = async () => {\n    this.RTMClient.getChannelAttributes(this.channel).then(attr => {\n      console.log(\"=>> channel attrs\", attr)\n      let tuteControls = attr.av ? JSON.parse(attr.av.value) : {};\n      console.log(\"=>> controls tute\", tuteControls);\n      this.checkForInitialMute(tuteControls);\n      this.setState({ tuteControls });\n    }).catch(error => {\n      console.log(\"failed to get channel attrs\", error);\n    })\n  }\n\n  checkForInitialMute = (tuteControls) => {\n    let ctrl = tuteControls[this.state.uid] || null;\n    let tuteAVControls = { ...this.state.tuteAVControls }\n    if (ctrl) {\n      console.log(\"attr \", ctrl, !tuteAVControls.audio, !tuteAVControls.video);\n      if (!ctrl.audio) {\n        this.muteUser('audio')\n        tuteAVControls.audio = false;\n      }\n      if (!ctrl.video) {\n        this.muteUser('video')\n        tuteAVControls.video = false;\n      }\n      this.setState({ tuteAVControls })\n    }\n  }\n\n  joinSessionChannel = async () => {\n    this.RTMClient.joinChannel(this.channel).then(res => {\n      console.log(\" =>> Channel joined successfull!\", res);\n      this.RTMClient.updateChannelState(this.channel, true);\n      this.joinRTCChannel();\n      this.setState({ rtmChannelJoined: true })\n    }).catch(error => {\n      console.log(\" =>> Error joining channel\", error);\n    })\n  }\n\n  subscribeChannelEvents = () => {\n    this.RTMClient.on('ChannelMessage', this.onChannelMessage)\n    this.RTMClient.on('MemberJoined', this.onMemberJoined);\n    this.RTMClient.on('MemberLeft', this.onMemberLeft);\n    this.RTMClient.on('AttributesUpdated', this.onAttributesUpdated);\n  }\n\n\n\n  subscribeClientEvents = () => {\n    this.RTMClient.on('ConnectionStateChanged', this.onConnectionStateChanged)\n    this.RTMClient.on('MessageFromPeer', this.onMessageFromPeer);\n  }\n\n  onAttributesUpdated = (channelName, attributes) => {\n    console.log(\"AttributesUpdated =>>\", channelName, attributes);\n  }\n\n  onMemberLeft = (channelName, memberId) => {\n    console.log(\"MemberLeft =>>\", channelName, memberId)\n  }\n\n  onMemberJoined = (channelName, memberId) => {\n    console.log(\"MemberJoined =>>\", channelName, memberId)\n  }\n\n  onChannelMessage = (channelName, message, memberId) => {\n    console.log(\"ChannelMessage =>>\", channelName, memberId, message)\n  }\n\n\n  onConnectionStateChanged = (state) => {\n    console.log(\" =>> onConnectionStateChanged\", state);\n  }\n  onMessageFromPeer = (message, peerId) => {\n    console.log(\"MessageFromPeer =>>\", message, peerId)\n    let data = JSON.parse(message.text);\n    console.log(\"=>> msg\", data);\n    if (data.value === false) {\n      this.muteUser(data.type);\n    }\n    let tuteAVControls = { ...this.state.tuteAVControls };\n    tuteAVControls[data.type] = data.value;\n    this.setState({ tuteAVControls })\n  }\n\n\n  muteUser = (type) => {\n    if (type === 'audio') {\n      if (this.state.localAudio) {\n        this.audioTrack.setEnabled(false);\n        this.setState({ localAudio: false });\n      }\n    } else if (type === 'video') {\n      if (this.state.localVideo) {\n        this.videoTrack.setEnabled(false);\n        this.setState({ localVideo: false });\n      }\n    }\n  }\n\n  initLocalStream = async () => {\n    try {\n      // [this.audioTrack, this.videoTrack] = await AgoraRTC.createMicrophoneAndCameraTracks();\n      this.videoTrack = await AgoraRTC.createCameraVideoTrack({ encoderConfig: this.state.selectedProfile });\n      this.audioTrack = await AgoraRTC.createMicrophoneAudioTrack();\n      // this.videoTrack.setOptimizationMode(\"motion\");\n      this.videoTrack.play(this.localVideoView.current);\n    } catch (error) {\n      alert(\"please check the permission for audio/camera\")\n      console.log(\"Weeoe\", error)\n    }\n  }\n\n  onDeviceChange = () => {\n    AgoraRTC.onMicrophoneChanged = this.onMicrophoneChanged;\n    // AgoraRTC.onCameraChanged = this.onPlaybackDeviceChange;\n  }\n\n  onCameraChanged = (info) => {\n    console.log(\"camera changed!\", info.state, info.device);\n  }\n\n\n  onMicrophoneChanged = async (info) => {\n    console.log(\"LLL  newdevice\", info);\n    try {\n      AgoraRTC.getDevices()\n        .then(async devices => {\n          const audioDevices = devices.filter(function (device) {\n            return device.kind === \"audioinput\";\n          });\n          console.log(audioDevices);\n          if (audioDevices.length > 0) {\n            let newAudioDevice = await AgoraRTC.createMicrophoneAudioTrack(audioDevices[0].deviceId);\n            if (this.state.audioPublished) {\n              await this.RTCClient.unpublish(this.audioTrack);\n              if (this.state.localAudio) {\n                this.publishTrack(newAudioDevice);\n              } else {\n                this.setState({ audioPublished: false });\n              }\n            }\n            this.audioTrack = newAudioDevice;\n\n          }\n        })\n    } catch (error) {\n      console.log(\"Error on get device,\", error);\n    }\n  }\n\n\n  publishTrack = (track) => {\n    this.RTCClient.publish(track).then(res => {\n      if (track.trackMediaType === 'audio') {\n        this.setState({ audioPublished: true })\n      } else if (track.trackMediaType === 'video') {\n        this.setState({ videoPublished: true })\n      }\n    }).catch(error => {\n      console.log(\"Failed to published track :\" + track.trackMediaType, track.trackMediaType, error);\n    })\n  }\n\n  unpublishTrack = async (track) => {\n    this.RTCClient.unpublish(track).then(() => {\n      console.log(\"unpublishTrack =>> :track unpublished\", track);\n    }).catch(error => {\n      console.log(\"unpublishTrack =>> : failed to unpublish track\", error);\n    })\n  }\n\n\n  initClient = () => {\n    this.RTCClient = AgoraRTC.createClient({\n      mode: 'rtc',\n      codec: 'vp8'\n    })\n    this.subscribeEvents();\n  }\n\n  subscribeEvents = () => {\n    this.RTCClient.on('user-published', this.userPublished);\n    this.RTCClient.on('user-unpublished', this.userUnPublished);\n    this.RTCClient.on('user-left', this.userLeft);\n    this.RTCClient.on('user-joined', this.userJoined);\n    this.RTCClient.enableAudioVolumeIndicator();\n    this.RTCClient.on('volume-indicator', this.volumeIndicator)\n    this.RTCClient.on('network-quality', this.networkQuality);\n  }\n\n  networkQuality = (stats) => {\n    console.log(\"=>> downlinkNetworkQuality\", stats.downlinkNetworkQuality);\n    console.log(\"=>> uplinkNetworkQuality\", stats.uplinkNetworkQuality);\n    let networkQuality = this.state.networkQuality;\n    let newNetworkQuality = stats.uplinkNetworkQuality;\n    if (newNetworkQuality > 0 && networkQuality !== newNetworkQuality) {\n      if (newNetworkQuality === 1) {\n        this.setVideoProfile('240p_1');\n      } else if (newNetworkQuality === 2) {\n        this.setVideoProfile('180p_3');\n      } else if (newNetworkQuality === 3 || newNetworkQuality === 4 || newNetworkQuality === 5) {\n        this.setVideoProfile('120p_1');\n      }\n      this.setState({ networkQuality: newNetworkQuality })\n    }\n  }\n\n\n  setVideoProfile = async (profile) => {\n    if (this.state.localVideo) {\n      await this.videoTrack.setEncoderConfiguration(profile).then(() => {\n        console.log(\" =>> Video profile updated : \", profile)\n        this.setState({ selectedProfile: profile });\n      })\n    }\n  }\n\n  volumeIndicator = async (volumes) => {\n    volumes.forEach((volume, index) => {\n      // console.log(` =>> ${index} UID ${volume.uid} Level ${volume.level}`);\n      if (volume.level >= 5) {\n        this.updateSpeaker(volume.uid);\n      }\n    });\n  }\n\n  updateSpeaker = (uid) => {\n    let suid = uid;\n    let speakers = [...this.state.speakers];\n    speakers.push(suid);\n    this.setState({ speakers }, () => this.removeSpeaker(suid));\n  }\n\n  removeSpeaker = (suid) => {\n    setTimeout(() => {\n      console.log(\"=>> cleared speaker\", suid)\n      let speakers = [...this.state.speakers];\n      const index = speakers.indexOf(suid);\n      if (index > -1) {\n        speakers.splice(index, 1);\n      }\n      this.setState({ speakers });\n    }, 2000);\n  }\n\n  userLeft = (user, reason) => {\n    console.log(\" =>> userLeft Reason\", reason);\n    let remoteStreams = { ...this.state.remoteStreams };\n    delete remoteStreams[user.uid];\n    this.setState({ remoteStreams });\n  }\n\n  userJoined = (user) => {\n    let remoteStreams = { ...this.state.remoteStreams };\n    let tuteControls = { ...this.state.tuteControls };\n    remoteStreams[user.uid] = {\n      uid: user.uid,\n      videoState: false,\n      audioState: false\n    };\n\n    if (!tuteControls[user.uid]) {\n      tuteControls[user.uid] = {\n        audio: true,\n        video: true\n      }\n    }\n    this.setState({\n      remoteStreams,\n      tuteControls\n    })\n  }\n\n  userPublished = async (user, mediaType) => {\n    console.log(\"userPublished =>>>> \", mediaType, user.uid);\n    await this.RTCClient.subscribe(user, mediaType);\n    await this.RTCClient.setRemoteVideoStreamType(user.uid, 0)\n    await this.RTCClient.setStreamFallbackOption(user.uid, 2)\n    let remoteStreams = { ...this.state.remoteStreams };\n    let uid = user.uid;\n    if (mediaType === \"video\") {\n      user.videoTrack.play(uid + \"\");\n      remoteStreams[uid].videoState = true;\n    }\n    else if (mediaType === \"audio\") {\n      user.audioTrack.play();\n      remoteStreams[uid].audioState = true;\n    }\n    this.setState({ remoteStreams });\n\n  }\n\n  userUnPublished = async (user, mediaType) => {\n    console.log(\"userUnPublished =>>>> \", mediaType, user.uid);\n    await this.RTCClient.unsubscribe(user, mediaType);\n    let uid = user.uid;\n    let remoteStreams = { ...this.state.remoteStreams };\n    if (remoteStreams[uid]) {\n      if (mediaType === \"video\") {\n        remoteStreams[uid].videoState = false;\n      }\n      else if (mediaType === \"audio\") {\n        remoteStreams[uid].audioState = false;\n      }\n      this.setState({ remoteStreams });\n    }\n  }\n\n  joinRTCChannel = () => {\n\n    if (this.RTCClient !== null) {\n      this.RTCClient.join(this.appId, this.channel, null, this.state.uid).then(uid => {\n        this.RTCClient.enableDualStream().then(() => {\n          console.log(\"Enable Dual stream success!\");\n        }).catch(err => {\n          console.log(err);\n        })\n\n        if (this.state.localVideo) {\n          this.publishTrack(this.videoTrack);\n        }\n        if (this.state.localAudio) {\n          this.publishTrack(this.audioTrack);\n        }\n      }).catch(error => {\n        console.log(\"failed to join channel \", error);\n      })\n    }\n  }\n\n  toggleTrack = async (track) => {\n\n\n    if (track === 'video' && this.state.tuteAVControls.video) {\n      if (this.state.localVideo) {\n        await this.videoTrack.setEnabled(false);\n      } else {\n        await this.videoTrack.setEnabled(true);\n\n        if (!this.state.videoPublished) {\n          this.publishTrack(this.videoTrack);\n        }\n      }\n      this.setState({ localVideo: !this.state.localVideo })\n\n    } else if (track === 'audio' && this.state.tuteAVControls.audio) {\n      if (this.state.localAudio) {\n        await this.audioTrack.setEnabled(false);\n      } else {\n        await this.audioTrack.setEnabled(true);\n        if (!this.state.audioPublished) {\n          this.publishTrack(this.audioTrack);\n        }\n\n      }\n      this.setState({ localAudio: !this.state.localAudio });\n    }\n\n  }\n  onAVChange = (id, type, value) => {\n    let tuteControls = { ...this.state.tuteControls }\n    let ctrl = tuteControls[id] ? { ...tuteControls[id] } : {};\n    ctrl[type] = !value;\n    tuteControls[id] = ctrl;\n\n    this.RTMClient.addOrUpdateChannelAttributes(this.channel, { 'av': JSON.stringify(tuteControls) }).then(res => {\n      console.log(\" =>> AV updated successfully!\");\n      let text = JSON.stringify({ type, value: !value });\n      this.RTMClient.sendPeerMessage(text, id.toString())\n        .then(result => {\n          console.log(\"sendResult =>>\", result);\n          if (result.hasPeerReceived) {\n            this.setState({ tuteControls });\n          }\n        }).catch(error => {\n          console.log(\"failed to send peer meg\", error);\n        })\n    })\n  }\n\n\n  leaveChannel = () => {\n    this.RTMClient.leaveChannel(this.channel).then(() => {\n      console.log(\"Logged out from channel\");\n      this.RTMClient.logout().then(() => {\n        console.log(\"Logged out from Agora\");\n        this.RTCClient.leave();\n        this.setState({ rtmChannelJoined: false, rtmLoggedIn: false, remoteStreams: {}, tuteControls: {}, speakers: [] })\n      }).catch(error => {\n        console.log(\"=>> Error on Logging out from channel\", error);\n      })\n    }).catch(error => {\n      console.log(\"=>> Error on leaving channel \", error);\n    })\n  }\n\n  toggleProfile = (event) => {\n    let value = event.target.value;\n    this.setVideoProfile(value);\n  }\n\n  render() {\n    const { remoteStreams, rtmLoggedIn, rtmChannelJoined, tuteControls, speakers } = this.state;\n    return (\n      <div className=\"App\" >\n        <div className=\"localStreamContainer\">\n          <input className=\"input\" value={this.state.uid} onChange={(e) => this.setState({ uid: e.target.value })} placeholder=\"enter user name\" />\n          <div id=\"localView\" ref={this.localVideoView}></div>\n          <div className=\"controls\">\n            <div className=\"controlIcon\" title={!tuteControls.video ? \"video muted by tute\" : \"\"} onClick={() => this.toggleTrack(\"video\")}>{this.state.localVideo ? <VideocamIcon fontSize=\"large\" /> : <VideocamOffIcon fontSize=\"large\" />}</div>\n            <div className=\"controlIcon\" title={!tuteControls.audio ? \"audio muted by tute\" : \"\"} onClick={() => this.toggleTrack(\"audio\")}>{this.state.localAudio ? <MicIcon fontSize=\"large\" /> : <MicOffIcon fontSize=\"large\" />}</div>\n          </div>\n          {!rtmLoggedIn && <button className=\"join\" onClick={this.loginToRTM}>Login RTM</button>}\n          {rtmChannelJoined && <button className=\"join\" onClick={this.leaveChannel}>Leave Channel</button>}\n        </div>\n        <div className=\"rightContainer\">\n          <div className=\"info\">\n            <div style={{ marginRight: \"10px\" }}>Count: {Object.keys(remoteStreams).length}</div>\n            | Video profile\n            <select style={{ marginLeft: \"10px\" }} value={this.state.selectedProfile} onChange={this.toggleProfile}>\n              {videoProfiles.map(item => <option value={item.value} key={item.label}>{item.detail}</option>)}\n            </select>\n          </div>\n          <div className=\"remoteStreamContainer\">\n            {Object.keys(remoteStreams).map((item, index) => <RemoteStream speaking={speakers.indexOf(item) > -1} key={item} isTute={this.state.isTute} onAVChange={this.onAVChange} tuteControls={tuteControls[item]} stream={remoteStreams[item]} id={item} />)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App2;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import Rtm from './Rtm';\nimport App2 from './App2';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div style={{ display: 'flex' }}>\n      <App2 />\n    </div>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}